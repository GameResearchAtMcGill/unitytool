//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34014
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Common;
using System.Collections.Generic;

namespace Learning
{
		public class RLTree
		{
		
			public RLNode root;
			Cell[][][] fullmap;
			int height;
			int endX, endY;
			int gridSize;
		
				public RLTree ( RLNode _root, Cell[][][] map, int _endX, int _endY, int _gridSize )
				{
					root = _root;
					fullmap = map;
					height = map.Length-1;
					endX = _endX;
					endY = _endY;
					gridSize = _gridSize;
				}
				
				public void DFSExpand( ref RLNode rlNode ){
				
					int x = rlNode.x;
					int y = rlNode.y;
					int t = rlNode.t;
					
					if( t == height || ( x == endX && y == endY ) )
						return ;
						
					int xm1 = x-1;
					if( xm1 >= 0 ){
						if( !fullmap[ t+1 ][ xm1 ][ y ].blocked && !fullmap[ t+1 ][ xm1 ][ y ].seen){
							rlNode.xm1y = new RLNode( xm1, y, t+1 );
							DFSExpand( ref rlNode.xm1y );					
						}
					}
					int xp1 = x+1;	
					if( xp1 < gridSize ){
						if( !fullmap[ t+1 ][ xp1 ][ y ].blocked && !fullmap[ t+1 ][ xp1 ][ y ].seen){
							rlNode.xp1y = new RLNode( xp1, y, t+1 );
							DFSExpand( ref rlNode.xp1y );					
						}
					}
					int ym1 = y-1;
					if( ym1 >= 0 ){
						if( !fullmap[ t+1 ][ x ][ ym1 ].blocked && !fullmap[ t+1 ][ x ][ ym1 ].seen){
							rlNode.xym1 = new RLNode( x, ym1, t+1 );	
							DFSExpand( ref rlNode.xym1 );					
						}
					}
					int yp1 = y+1;
					if( yp1 < gridSize ){
						if( !fullmap[ t+1 ][ x ][ yp1 ].blocked && !fullmap[ t+1 ][ x ][ yp1 ].seen){
							rlNode.xyp1 = new RLNode( x, yp1, t+1 );
							DFSExpand( ref rlNode.xyp1 ) ;					
						}
					}
					if( !fullmap[ t+1 ][ x ][ y ].blocked && !fullmap[ t+1 ][ x ][ y ].seen){
						rlNode.xy = new RLNode( x, y, t+1 );
						DFSExpand( ref rlNode.xy ) ;					
					}
			}														
		}
}

