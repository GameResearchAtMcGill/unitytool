//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//using System;
using UnityEngine;
//using System.Collections;
//using System.IO;
using System.Collections.Generic;

public static class CommonTestCase1
{
	static float stepPath = -1.0f;
	public static List<Vector3> definePath()
	{
		List<Vector3> pathPts = new List<Vector3> ();
		GameObject sp = (GameObject)GameObject.Find ("StartPoint");
		pathPts.Add(sp.transform.position);
		findPath (pathPts);
		return pathPts;
	}
	private static void findPath (List<Vector3> pathPts)
	{
		float xMinPath = pathPts [0].x;
		float xMaxPath = -pathPts [0].x;
		float zMinPath = -pathPts [0].z;
		float zMaxPath = pathPts [0].z;
		float stepPathPoint = 0.2f;
		stepPath = stepPathPoint;
		for (float i=xMinPath; i<=xMaxPath; i+=stepPathPoint)
		{
			pathPts.Add(new Vector3(i,1,zMaxPath));
		}
		for (float i=zMaxPath-stepPathPoint; i>=zMinPath; i-=stepPathPoint)
		{
			pathPts.Add(new Vector3(xMaxPath,1,i));
		}
		for (float i=xMaxPath-stepPathPoint; i>=xMinPath; i-=stepPathPoint)
		{
			pathPts.Add(new Vector3(i,1,zMinPath));
		}
		for (float i=zMinPath+stepPathPoint; i<=zMaxPath-stepPathPoint; i+=stepPathPoint)
		{
			pathPts.Add(new Vector3(xMinPath,1,i));
		}
	}
	//Distance b/w consecutive points
	public static float getStepDistance()
	{
		if (stepPath < 0.0f)
			Debug.LogError ("Distance b/w consecutive points not set.");
		return stepPath;
	}
}


