//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//using System;
using UnityEngine;
using System.Collections.Generic;
public class NodeShadow
{
	public NodeShadow ()
	{
		parent = new List<NodeShadow> ();
		safetyLevel = -1;
		children = new List<NodeShadow> ();
	}
	public NodeShadow (Vector3 pt)
	{
		parent = new List<NodeShadow> ();
		safetyLevel = -1;
		currPt = pt;
		children = new List<NodeShadow> ();
	}
	public void addChild(NodeShadow nodeChild)
	{
		if(!children.Contains(nodeChild))
			children.Add(nodeChild);
		if(!nodeChild.parent.Contains(this))
			nodeChild.parent.Add(this);
	}
	public List<NodeShadow> getChildren()
	{
		return children;
	}
	public Vector3 getPos()
	{
		return currPt;
	}
	public void setParent(NodeShadow parentArg)
	{
		if(!parent.Contains(parentArg))
			parent.Add(parentArg);
	}
	public List<NodeShadow> getParent()
	{
		return parent;
	}
	public void setSafetyLevel(int levelOfAcess)
	{
		if(safetyLevel<0)
			safetyLevel = levelOfAcess;
	}
	public int getSafetyLevel()
	{
		return safetyLevel;
	}
	Vector3 currPt;
	List<NodeShadow> children;
	List<NodeShadow> parent;
	int safetyLevel;//The index of path point of player for when this node is safe
}


