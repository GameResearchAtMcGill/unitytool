//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections.Generic;
public static class CommonMGS
{
	static float stepPath = 0.2f;
	public static List<Vector3> definePath()
	{
		List<Vector3> pathPts = new List<Vector3> ();
		GameObject sp = (GameObject)GameObject.Find ("StartPoint");
		GameObject ep = (GameObject)GameObject.Find ("EndPoint");
		pathPts.Add(sp.transform.position);

		//pathPts.Add(ep.transform.position);
		findPath1 (pathPts);

		return pathPts;
	}
	private static void findPath1 (List<Vector3> pathPts)
	{
		float step = 12 * stepPath;
		Vector3 pt1 = new Vector3 (pathPts [0].x, pathPts [0].y, pathPts [0].z +step);
		showPosOfPoint (pt1, Color.green);

		step = 21 * stepPath;
		Vector3 pt2 = new Vector3 (pt1.x+step, pt1.y, pt1.z);
		showPosOfPoint (pt2, Color.green);

		step = 14 * stepPath;
		step = step * step;
		float xVar = 2.1f;
		float zVar = Mathf.Sqrt(step - xVar * xVar);
		Vector3 pt3 = new Vector3 (pt2.x+xVar, pt2.y, pt2.z-zVar);
		showPosOfPoint (pt3, Color.green);

	}
	//Distance b/w consecutive points
	public static float getStepDistance()
	{
		if (stepPath < 0.0f)
			Debug.LogError ("Distance b/w consecutive points not set.");
		return stepPath;
	}
	private static void showPosOfPoint(Vector3 pos,Color c)
	{
		if (float.IsNaN (pos.x) || float.IsNaN (pos.z))
			return;
		GameObject sp = (GameObject)GameObject.Find ("StartPoint");
		GameObject tempObj = (GameObject)GameObject.Instantiate (sp);
		Renderer rend = tempObj.GetComponent<Renderer>();
		rend.material.color = c;
		tempObj.transform.position=pos;
	}
}

